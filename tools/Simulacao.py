import streamlit as st
import pandas as pd
import plotly.graph_objects as go

# ----------------------------
# Configura√ß√£o inicial
# ----------------------------
st.set_page_config(
    page_title="Proje√ß√£o de Pegada de Carbono - F√≥rum Ci√™ncia e Sociedade 2025",
    page_icon="üå±",
    layout="wide"
)

st.title("üåç Proje√ß√£o de Pegada de Carbono (10 anos)")
st.markdown("""
Este painel interativo permite **projetar a pegada de carbono** para os pr√≥ximos 10 anos
com base em tr√™s cen√°rios:
- **Base:** Sem mudan√ßas nas pr√°ticas atuais.
- **Medida 1:** Card√°pio sustent√°vel (redu√ß√£o gradual das emiss√µes relacionadas √† alimenta√ß√£o).
- **Medida 2:** Conjunto de medidas ‚Äî energia solar, compostagem/reciclagem e plantio de √°rvores.
""")

st.info("**Ano base:** 918,2 t CO‚ÇÇe/ano")

# ----------------------------
# Par√¢metros fixos
# ----------------------------
BASE = 918.2
portions = {
    "diet": 909.4,       # Alimenta√ß√£o
    "elec": 0.6,         # Eletricidade
    "waste": 2.9,        # Res√≠duos
    "transport": 6.4,    # Transporte
    "water": 0.01        # √Ågua
}
years = list(range(0, 10))  # 10 anos

# ----------------------------
# Controles interativos
# ----------------------------
st.header("Ajuste as hip√≥teses")

cols = st.columns(4)

with cols[0]:
    dietMax = st.slider(
        "Redu√ß√£o m√°xima de emiss√µes da alimenta√ß√£o (%)",
        min_value=10, max_value=40, value=30, step=1
    )

with cols[1]:
    pvAvoid = st.slider(
        "Instala√ß√£o fotovoltaica - emiss√µes evitadas (t CO‚ÇÇe/ano)",
        min_value=0.0, max_value=5.0, value=0.6, step=0.1
    )

with cols[2]:
    wastePct = st.slider(
        "Redu√ß√£o de emiss√µes de res√≠duos (%)",
        min_value=0, max_value=80, value=50, step=5
    )

with cols[3]:
    treesPerYear = st.slider(
        "√Årvores plantadas por ano",
        min_value=0, max_value=200, value=50, step=5
    )



# ----------------------------
# Fun√ß√µes para calcular os cen√°rios
# ----------------------------
def compute_series():
    # Base: constante
    base = [BASE for _ in years]

    # Medida 1: redu√ß√£o linear da dieta at√© ano 5
    m1 = []
    for y in years:
        frac = min(1, y/5)
        dietNow = portions["diet"] * (1 - (dietMax/100) * frac)
        total = dietNow + portions["elec"] + portions["waste"] + portions["transport"] + portions["water"]
        m1.append(total)

    # Medida 2: cortes imediatos e sequestro cumulativo de √°rvores
    m2 = []
    cumulativeTrees = 0
    for y in years:
        elecNow = max(0, portions["elec"] - pvAvoid)
        wasteNow = portions["waste"] * (1 - wastePct/100)
        cumulativeTrees += treesPerYear
        sequestration = cumulativeTrees * 0.022  # 22 kg CO‚ÇÇ por √°rvore por ano
        total = portions["diet"] + elecNow + wasteNow + portions["transport"] + portions["water"] - sequestration
        m2.append(max(0, total))  # n√£o permite valores negativos
    return base, m1, m2

base, m1, m2 = compute_series()

# ----------------------------
# DataFrame para tabela
# ----------------------------
df = pd.DataFrame({
    "Ano": [f"Ano {y}" for y in years],
    "Base (sem mudan√ßas)": base,
    "Medida 1 - Card√°pio Sustent√°vel": m1,
    "Medida 2 - Solar + Res√≠duos + √Årvores": m2
})

# ----------------------------
# Gr√°fico interativo
# ----------------------------
fig = go.Figure()

fig.add_trace(go.Scatter(
    x=years, y=base,
    mode='lines+markers',
    name='Base (sem mudan√ßas)',
    line=dict(color='#60a5fa', width=3)
))

fig.add_trace(go.Scatter(
    x=years, y=m1,
    mode='lines+markers',
    name='Medida 1 ‚Äî Card√°pio sustent√°vel',
    line=dict(color='#34d399', width=3)
))

fig.add_trace(go.Scatter(
    x=years, y=m2,
    mode='lines+markers',
    name='Medida 2 ‚Äî Solar + res√≠duos + √°rvores',
    line=dict(color='#fbbf24', width=3)
))

fig.update_layout(
    title="Proje√ß√£o da Pegada de Carbono (10 anos)",
    xaxis_title="Ano",
    yaxis_title="t CO‚ÇÇe/ano",
    template="plotly_dark",
    hovermode="x unified"
)

# ----------------------------
# Layout Streamlit
# ----------------------------
col1, col2 = st.columns([2, 1])

with col1:
    st.plotly_chart(fig, use_container_width=True)

with col2:
    st.subheader("Resumo Num√©rico")
    st.dataframe(df.style.format({"Base (sem mudan√ßas)": "{:.1f}", 
                                  "Medida 1 - Card√°pio Sustent√°vel": "{:.1f}", 
                                  "Medida 2 - Solar + Res√≠duos + √Årvores": "{:.1f}"}))

st.markdown("---")
st.markdown("""
üí° **Metodologia simplificada**:  
- Medida 1 aplica **redu√ß√£o linear** na parcela da alimenta√ß√£o at√© o 5¬∫ ano.  
- Medida 2 aplica cortes imediatos em eletricidade e res√≠duos, al√©m de **sequestro cumulativo** das √°rvores (22 kg CO‚ÇÇ por √°rvore por ano).

> Para invent√°rios oficiais, seguir **GHG Protocol** e **ISO 14064/14067**.
""")
