import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

st.set_page_config(page_title="üå≥ Carbono Estocado em Florestas", page_icon="üåø", layout="wide")

st.title("üå≥ C√°lculo e An√°lise do Carbono Estocado em Florestas")
st.info("Este painel mostra os dados e c√°lculos relacionados ao carbono estocado em florestas, com base em medi√ß√µes de DAP (Di√¢metro √† Altura do Peito) para √°rvores vivas, mortas em p√© e mortas ca√≠das.")
        

# =====================
# Dados brutos (EMBUTIDOS)
# =====================
st.markdown("## üìÑ Dados coletados (embutidos no c√≥digo)")

data_vivas = [
    {'DAP arvores vivas': 3.0, 'Quantidade de mat√©ria vegetal': 16.11078769},
    {'DAP arvores vivas': 3.0, 'Quantidade de mat√©ria vegetal': 16.11078769},
    {'DAP arvores vivas': 3.8, 'Quantidade de mat√©ria vegetal': 29.29897987},
    {'DAP arvores vivas': 5.6, 'Quantidade de mat√©ria vegetal': 78.14761141},
    {'DAP arvores vivas': 5.7, 'Quantidade de mat√©ria vegetal': 81.72659118},
    {'DAP arvores vivas': 5.8, 'Quantidade de mat√©ria vegetal': 85.40294042},
    {'DAP arvores vivas': 7.0, 'Quantidade de mat√©ria vegetal': 137.4352198},
    {'DAP arvores vivas': 7.5, 'Quantidade de mat√©ria vegetal': 163.6458501},
    {'DAP arvores vivas': 9.0, 'Quantidade de mat√©ria vegetal': 259.5574799},
    {'DAP arvores vivas': 9.0, 'Quantidade de mat√©ria vegetal': 259.5574799},
    {'DAP arvores vivas': 9.0, 'Quantidade de mat√©ria vegetal': 259.5574799},
    {'DAP arvores vivas': 10.0, 'Quantidade de mat√©ria vegetal': 338.8441561},
    {'DAP arvores vivas': 10.0, 'Quantidade de mat√©ria vegetal': 338.8441561},
    {'DAP arvores vivas': 10.0, 'Quantidade de mat√©ria vegetal': 338.8441561},
    {'DAP arvores vivas': 10.0, 'Quantidade de mat√©ria vegetal': 338.8441561},
    {'DAP arvores vivas': 11.0, 'Quantidade de mat√©ria vegetal': 431.2444248},
    {'DAP arvores vivas': 11.0, 'Quantidade de mat√©ria vegetal': 431.2444248},
    {'DAP arvores vivas': 13.0, 'Quantidade de mat√©ria vegetal': 658.0769530},
    {'DAP arvores vivas': 13.0, 'Quantidade de mat√©ria vegetal': 658.0769530},
    {'DAP arvores vivas': 13.0, 'Quantidade de mat√©ria vegetal': 658.0769530},
    {'DAP arvores vivas': 13.8, 'Quantidade de mat√©ria vegetal': 765.4099236},
    {'DAP arvores vivas': 14.0, 'Quantidade de mat√©ria vegetal': 793.7869052},
    {'DAP arvores vivas': 14.0, 'Quantidade de mat√©ria vegetal': 793.7869052},
    {'DAP arvores vivas': 14.0, 'Quantidade de mat√©ria vegetal': 793.7869052},
    {'DAP arvores vivas': 15.7, 'Quantidade de mat√©ria vegetal': 1060.781948},
    {'DAP arvores vivas': 15.8, 'Quantidade de mat√©ria vegetal': 1077.959465},
    {'DAP arvores vivas': 16.0, 'Quantidade de mat√©ria vegetal': 1112.816499},
    {'DAP arvores vivas': 17.0, 'Quantidade de mat√©ria vegetal': 1297.286119},
    {'DAP arvores vivas': 18.0, 'Quantidade de mat√©ria vegetal': 1499.130493},
    {'DAP arvores vivas': 18.0, 'Quantidade de mat√©ria vegetal': 1499.130493},
    {'DAP arvores vivas': 18.0, 'Quantidade de mat√©ria vegetal': 1499.130493},
    {'DAP arvores vivas': 19.0, 'Quantidade de mat√©ria vegetal': 1718.884164},
    {'DAP arvores vivas': 19.0, 'Quantidade de mat√©ria vegetal': 1718.884164},
    {'DAP arvores vivas': 20.0, 'Quantidade de mat√©ria vegetal': 1957.067879},
    {'DAP arvores vivas': 23.0, 'Quantidade de mat√©ria vegetal': 2787.221126},
    {'DAP arvores vivas': 24.0, 'Quantidade de mat√©ria vegetal': 3104.090978},
    {'DAP arvores vivas': 26.0, 'Quantidade de mat√©ria vegetal': 3800.866102},
    {'DAP arvores vivas': 26.0, 'Quantidade de mat√©ria vegetal': 3800.866102},
    {'DAP arvores vivas': 26.0, 'Quantidade de mat√©ria vegetal': 3800.866102},
    {'DAP arvores vivas': 26.0, 'Quantidade de mat√©ria vegetal': 3800.866102},
    {'DAP arvores vivas': 27.0, 'Quantidade de mat√©ria vegetal': 4181.675452},
    {'DAP arvores vivas': 27.0, 'Quantidade de mat√©ria vegetal': 4181.675452},
    {'DAP arvores vivas': 28.0, 'Quantidade de mat√©ria vegetal': 4584.68835},
    {'DAP arvores vivas': 28.0, 'Quantidade de mat√©ria vegetal': 4584.68835},
    {'DAP arvores vivas': 29.0, 'Quantidade de mat√©ria vegetal': 5010.336963},
    {'DAP arvores vivas': 32.0, 'Quantidade de mat√©ria vegetal': 6427.31293},
    {'DAP arvores vivas': 32.0, 'Quantidade de mat√©ria vegetal': 6427.31293},
    {'DAP arvores vivas': 33.0, 'Quantidade de mat√©ria vegetal': 6947.687369},
    {'DAP arvores vivas': 33.0, 'Quantidade de mat√©ria vegetal': 6947.687369},
    {'DAP arvores vivas': 40.0, 'Quantidade de mat√©ria vegetal': 11303.46979},
    {'DAP arvores vivas': 47.0, 'Quantidade de mat√©ria vegetal': 16998.38183},
    {'DAP arvores vivas': 72.7, 'Quantidade de mat√©ria vegetal': 51248.60632}
]


data_mortas_pe = [
    {'DAP mortas em p√©': 9.0, 'Quantidade de mat√©ria vegetal': 259.5574799},
    {'DAP mortas em p√©': 13.0, 'Quantidade de mat√©ria vegetal': 658.0769530},
    {'DAP mortas em p√©': 14.0, 'Quantidade de mat√©ria vegetal': 793.7869052},
    {'DAP mortas em p√©': 15.0, 'Quantidade de mat√©ria vegetal': 945.1720825},
    {'DAP mortas em p√©': 16.0, 'Quantidade de mat√©ria vegetal': 1112.8164990},
    {'DAP mortas em p√©': 17.0, 'Quantidade de mat√©ria vegetal': 1297.2861190},
    {'DAP mortas em p√©': 18.0, 'Quantidade de mat√©ria vegetal': 1499.1304930},
    {'DAP mortas em p√©': 18.0, 'Quantidade de mat√©ria vegetal': 1499.1304930},
    {'DAP mortas em p√©': 19.0, 'Quantidade de mat√©ria vegetal': 1718.8841640},
    {'DAP mortas em p√©': 20.0, 'Quantidade de mat√©ria vegetal': 1957.0678790},
    {'DAP mortas em p√©': 20.0, 'Quantidade de mat√©ria vegetal': 1957.0678790},
    {'DAP mortas em p√©': 25.0, 'Quantidade de mat√©ria vegetal': 3441.8205390},
    {'DAP mortas em p√©': 70.0, 'Quantidade de mat√©ria vegetal': 46569.12107}
]


data_mortas_caidas = [
    {'DAP': 10.0, 'L': 1.3, 'DAP2': 100.0, 'DAP2xL': 130.0},
    {'DAP': 18.0, 'L': 1.7, 'DAP2': 324.0, 'DAP2xL': 550.8},
    {'DAP': 28.0, 'L': 8.5, 'DAP2': 784.0, 'DAP2xL': 6664.0},
    {'DAP': 26.0, 'L': 2.8, 'DAP2': 676.0, 'DAP2xL': 1892.8},
    {'DAP': 26.0, 'L': 1.7, 'DAP2': 676.0, 'DAP2xL': 1149.2},
    {'DAP': 14.0, 'L': 3.0, 'DAP2': 196.0, 'DAP2xL': 588.0}
]

df_vivas = pd.DataFrame(data_vivas)
df_mortas_pe = pd.DataFrame(data_mortas_pe)
df_mortas_caidas = pd.DataFrame(data_mortas_caidas)

col_a, col_b = st.columns(2)
with col_a:
    st.markdown("### üå± DAP ‚Äî √Årvores Vivas")
    st.dataframe(df_vivas, use_container_width=True, height=320)
with col_b:
    st.markdown("### üå≤ DAP ‚Äî Mortas em P√©")
    st.dataframe(df_mortas_pe, use_container_width=True, height=320)

st.markdown("### üåø DAP ‚Äî Mortas Ca√≠das")
st.dataframe(df_mortas_caidas, use_container_width=True)


# =====================
# Explica√ß√£o dos C√°lculos (com f√≥rmulas em LaTeX)
# =====================
st.markdown("## üßÆ Como s√£o feitos os c√°lculos")

st.markdown("""
A partir da folha **Carbono_Estocado**, inferimos a fra√ß√£o m√©dia de carbono na mat√©ria vegetal como **0.45** (‚âà45%), 
valor compat√≠vel com refer√™ncias t√©cnicas (entre 0,45 e 0,50).  
Os c√°lculos seguem as seguintes etapas:
""")

# 1) Biomassa -> Carbono
st.markdown("### 1Ô∏è‚É£ Convers√£o de Biomassa em Carbono (tC)")
st.latex(r"""
C = B \times f_C
""")
st.markdown("""
onde:  
- \( C \) = quantidade de **carbono estocado** (tC);  
- \( B \) = **biomassa total** (t);  
- \( f_C \) = **fra√ß√£o m√©dia de carbono na biomassa**, adotada como 0,45.
""")

# 2) Carbono -> CO2 Equivalente
st.markdown("### 2Ô∏è‚É£ Convers√£o de Carbono em Di√≥xido de Carbono Equivalente (tCO‚ÇÇe)")
st.latex(r"""
CO_{2e} = C \times \frac{44}{12}
""")
st.markdown("""
O fator estequiom√©trico \\( \\tfrac{44}{12} \\approx 3{,}67 \\) decorre da rela√ß√£o entre as massas molares 
do di√≥xido de carbono (CO‚ÇÇ) e do carbono (C):  
- Massa molar do CO‚ÇÇ = 44 g/mol  
- Massa molar do C = 12 g/mol  
""")

# 3) Carbono por hectare
st.markdown("### 3Ô∏è‚É£ Carbono por Unidade de √Årea (tC/ha)")
st.latex(r"""
C_{ha} = \frac{C}{A}
""")
st.markdown("""
onde:  
- \( C_{ha} \) = **carbono por hectare** (tC/ha);  
- \( A \) = **√°rea amostrada** (ha).  
""")

# Observa√ß√µes adicionais
st.markdown("""
### üìò Observa√ß√µes Importantes

- **DAP_Vivas** e **DAP_Mortas_Em_Pe**: possuem as colunas *DAP* e **Quantidade de mat√©ria vegetal** (considerada a biomassa individual).  
- **DAP_Mortas_Caidas**: cont√©m *DAP*, *L*, *DAP¬≤* e *DAP¬≤ √ó L*, que representam um **√≠ndice volum√©trico** aproximado.  
  Como n√£o h√° dados de densidade ou fatores alom√©tricos espec√≠ficos, a convers√£o para toneladas √© substitu√≠da por m√©tricas **relativas**, 
  evitando super ou subestimativas.
""")


# =====================
# Totais consolidados (da planilha)
# =====================
FATOR_CO2E = 44/12
TOTAL_MATERIA_VEG = 247788.508069
TOTAL_CARBONO_T = 111504.828631

col1, col2, col3 = st.columns(3)
col1.metric("Mat√©ria vegetal total (unid. da planilha)", f"{TOTAL_MATERIA_VEG:,.2f}")
col2.metric("Carbono total (tC)", f"{TOTAL_CARBONO_T:,.2f}")
col3.metric("CO‚ÇÇe total (tCO‚ÇÇe)", f"{(TOTAL_CARBONO_T*FATOR_CO2E):,.2f}")

st.info("A fra√ß√£o de carbono inferida da planilha √© ‚âà **45.00%** (Carbono/Massa).")

# =====================
# C√°lculos autom√°ticos por registro (quando aplic√°vel)
# =====================
F_C = 0.45  # fra√ß√£o de carbono inferida (‚âà0,45)
if "Quantidade de mat√©ria vegetal" in df_vivas.columns:
    df_vivas["Carbono estimado (tC)"] = df_vivas["Quantidade de mat√©ria vegetal"] * F_C
    df_vivas["CO‚ÇÇe estimado (tCO‚ÇÇe)"] = df_vivas["Carbono estimado (tC)"] * FATOR_CO2E

if "Quantidade de mat√©ria vegetal" in df_mortas_pe.columns:
    df_mortas_pe["Carbono estimado (tC)"] = df_mortas_pe["Quantidade de mat√©ria vegetal"] * F_C
    df_mortas_pe["CO‚ÇÇe estimado (tCO‚ÇÇe)"] = df_mortas_pe["Carbono estimado (tC)"] * FATOR_CO2E

st.markdown("### üìä Tabelas com estimativas (quando aplic√°vel)")
colx, coly = st.columns(2)
with colx:
    if "Carbono estimado (tC)" in df_vivas.columns:
        st.markdown("**√Årvores Vivas ‚Äî com estimativas**")
        st.dataframe(df_vivas, use_container_width=True, height=320)
with coly:
    if "Carbono estimado (tC)" in df_mortas_pe.columns:
        st.markdown("**Mortas em P√© ‚Äî com estimativas**")
        st.dataframe(df_mortas_pe, use_container_width=True, height=320)

# =====================
# Visualiza√ß√µes
# =====================
st.markdown("## üåç Visualiza√ß√µes")

# Distribui√ß√µes de DAP
c1, c2, c3 = st.columns(3)
with c1:
    if "DAP arvores vivas" in df_vivas.columns:
        fig = px.histogram(df_vivas, x="DAP arvores vivas", nbins=15, title="Distribui√ß√£o de DAP ‚Äî √Årvores Vivas")
        st.plotly_chart(fig, use_container_width=True)
with c2:
    if "DAP mortas em p√©" in df_mortas_pe.columns:
        fig = px.histogram(df_mortas_pe, x="DAP mortas em p√©", nbins=10, title="Distribui√ß√£o de DAP ‚Äî Mortas em P√©")
        st.plotly_chart(fig, use_container_width=True)
with c3:
    if "DAP2xL" in df_mortas_caidas.columns:
        fig = px.histogram(df_mortas_caidas, x="DAP2xL", nbins=10, title="Distribui√ß√£o de DAP2xL ‚Äî Mortas Ca√≠das")
        st.plotly_chart(fig, use_container_width=True)

# Barras de biomassa (vivas e mortas em p√©)
if "Quantidade de mat√©ria vegetal" in df_vivas.columns and "Quantidade de mat√©ria vegetal" in df_mortas_pe.columns:
    soma_vivas = df_vivas["Quantidade de mat√©ria vegetal"].sum()
    soma_mortas_pe = df_mortas_pe["Quantidade de mat√©ria vegetal"].sum()
    df_bar = pd.DataFrame({
        "Categoria": ["√Årvores Vivas", "Mortas em P√©"],
        "Mat√©ria vegetal (soma)": [soma_vivas, soma_mortas_pe]
    })
    fig_bar = px.bar(df_bar, x="Categoria", y="Mat√©ria vegetal (soma)", text_auto=".2f",
                     title="Soma da Mat√©ria Vegetal ‚Äî Vivas vs Mortas em P√©")
    st.plotly_chart(fig_bar, use_container_width=True)

# Treemap/√çndice para mortas ca√≠das com DAP2xL
if "DAP2xL" in df_mortas_caidas.columns:
    df_mc = df_mortas_caidas.copy()
    df_mc["√çndice (DAP2xL normalizado)"] = df_mc["DAP2xL"] / df_mc["DAP2xL"].sum()
    fig_treemap = px.treemap(df_mc, path=["DAP"], values="DAP2xL",
                             title="Contribui√ß√£o relativa por pe√ßa (DAP2xL) ‚Äî Mortas Ca√≠das")
    st.plotly_chart(fig_treemap, use_container_width=True)

st.markdown("""
---
### üß≠ Conclus√£o
Os dados embutidos permitem **reprodutibilidade** e **transpar√™ncia**: qualquer leitor pode entender as premissas e replicar os c√°lculos.  
Utilizamos **fra√ß√£o de carbono ‚âà 0,45** (inferida da pr√≥pria planilha) e o fator **44/12** para CO‚ÇÇe.  
Para o material **morto ca√≠do**, sem par√¢metros adicionais (densidade/√°lgebra alom√©trica), apresentamos **m√©tricas relativas** (*DAP2xL*) para evitar vieses.
""")

st.caption("üåø IFMG Campus Ponte Nova ‚Äî P√°gina gerada automaticamente a partir dos dados fornecidos.")
